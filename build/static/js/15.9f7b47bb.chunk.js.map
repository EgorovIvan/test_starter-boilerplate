{"version":3,"sources":["views/app-views/clients/clients-list/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/clients/clients-list/index.js"],"names":["UserView","this","props","data","visible","close","width","placement","onClose","closable","className","size","src","img","name","dashed","address","street","suite","city","zipcode","company","catchPhrase","bs","Component","renderAvatar","type","text","AvatarStatus","suffix","subTitle","id","icon","shape","gap","onNameClick","onClick","UserList","state","users","userProfileVisible","selectedUser","deleteUser","userId","setState","filter","item","message","success","content","duration","showUserProfile","userInfo","closeUserProfile","axios","get","then","res","catch","error","console","log","tableColumns","title","dataIndex","render","_","record","email","sorter","compare","a","b","toLowerCase","username","phone","website","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","columns","dataSource","rowKey"],"mappings":"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","file":"static/js/15.9f7b47bb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Avatar, Drawer, Divider} from 'antd';\r\n\r\n\r\nexport class UserView extends Component {\r\n    render() {\r\n        const {data, visible, close} = this.props;\r\n        return (\r\n            <Drawer\r\n                width={300}\r\n                placement=\"right\"\r\n                onClose={close}\r\n                closable={false}\r\n                visible={visible}\r\n            >\r\n                <div className=\"text-center mt-3\">\r\n                    <Avatar size={80} src={data?.img}/>\r\n                    <h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n                </div>\r\n                <Divider dashed/>\r\n                <div className=\"\">\r\n                    <h6 className=\"text-muted text-uppercase mb-3\">ADDRESS</h6>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">street: {data?.address.street}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">suite: {data?.address.suite}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">city: {data?.address.city}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">zipcode: {data?.address.zipcode}</span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <h6 className=\"text-muted text-uppercase mb-3\">COMPANY</h6>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">company: {data?.company.name}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">{data?.company.catchPhrase}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"ml-3 text-dark\">{data?.company.bs}</span>\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, {Component} from 'react'\r\nimport {Card, Table, Tag, Tooltip, message, Button} from 'antd';\r\nimport {EyeOutlined, DeleteOutlined} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport UserView from './UserView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport userData from \"assets/data/user-list.data.json\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport class UserList extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        userProfileVisible: false,\r\n        selectedUser: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get('https://jsonplaceholder.typicode.com/users/')\r\n            .then((res) => {\r\n                this.setState({users: res.data})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        this.setState({\r\n            users: this.state.users.filter(item => item.id !== userId),\r\n        })\r\n        message.success({content: `Deleted user ${userId}`, duration: 2});\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {users, userProfileVisible, selectedUser} = this.state;\r\n\r\n        const tableColumns = [\r\n            {\r\n                title: 'User',\r\n                dataIndex: 'name',\r\n                render: (_, record) => (\r\n                    <div className=\"d-flex\">\r\n                        <AvatarStatus\r\n                            src={process.env.PUBLIC_URL + \"/public/img/avatars/thumb-11.jpg\"}\r\n                            name={record.name}\r\n                            subTitle={record.email}/>\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'username',\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.username.toLowerCase();\r\n                        b = b.username.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                dataIndex: 'phone',\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.phone.toLowerCase();\r\n                        b = b.phone.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Website',\r\n                dataIndex: 'website',\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.website.toLowerCase();\r\n                        b = b.website.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right\">\r\n                        <Tooltip title=\"View\">\r\n                            <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined/>} onClick={() => {\r\n                                this.showUserProfile(elm)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined/>} onClick={() => {\r\n                                this.deleteUser(elm.id)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <Card bodyStyle={{'padding': '0px'}}>\r\n                <Table columns={tableColumns} dataSource={users} rowKey='id'/>\r\n                <UserView data={selectedUser} visible={userProfileVisible} close={() => {\r\n                    this.closeUserProfile()\r\n                }}/>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserList\r\n"],"sourceRoot":""}